worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 0.0.0.0:4717 default_server;
        server_name _;

        # Error and access logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Serve the main HTML interface
        location / {
            root /usr/share/ttyd;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Additional headers for HTML files
            add_header Content-Type "text/html; charset=utf-8" always;
        }

        # Proxy WebSocket connections to ttyd
        location /ws {
            proxy_pass http://0.0.0.0:4718/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
            
            # Additional WebSocket settings
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            
            # Ensure proper WebSocket handling
            proxy_set_header Origin $http_origin;
            proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
            
            # Force WebSocket mode
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade "websocket";
        }

        # Proxy ttyd WebSocket interface (MUST come before /ttyd/ to avoid conflicts)
        location /ttyd/ws {
            proxy_pass http://0.0.0.0:4718/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
            
            # Additional WebSocket settings
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            
            # Ensure proper WebSocket handling
            proxy_set_header Origin $http_origin;
            proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
            
            # Force WebSocket mode
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade "websocket";
        }

        # Proxy ttyd HTTP interface
        location /ttyd/ {
            proxy_pass http://0.0.0.0:4718/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # Proxy other ttyd endpoints
        location /token {
            proxy_pass http://0.0.0.0:4718;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Register as BlueOS Service
        location /register_service {
            alias /site/register_service;
        }
        
        # BlueOS API documentation endpoint
        location /docs {
            add_header Content-Type "text/html; charset=utf-8";
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>ROS2 Terminal API Documentation</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        h1 { color: #007acc; }
        .endpoint { background: #f5f5f5; padding: 10px; margin: 10px 0; border-radius: 5px; }
        .method { font-weight: bold; color: #28a745; }
    </style>
</head>
<body>
    <h1>ROS2 Terminal API Documentation</h1>
    <p>This extension provides a multi-tab web terminal interface for ROS2 development.</p>
    
    <div class="endpoint">
        <div class="method">GET /</div>
        <div>Main terminal interface with multi-tab support</div>
    </div>
    
    <div class="endpoint">
        <div class="method">WebSocket /ttyd/ws</div>
        <div>Terminal WebSocket connection for real-time communication</div>
    </div>
    
    <div class="endpoint">
        <div class="method">GET /ttyd/</div>
        <div>Direct ttyd terminal interface</div>
    </div>
    
    <h2>Features</h2>
    <ul>
        <li>Multi-tab terminal interface</li>
        <li>Tab renaming (double-click or Ctrl+R)</li>
        <li>ROS2 environment integration</li>
        <li>Copy-paste support</li>
        <li>WebSocket-based real-time communication</li>
    </ul>
</body>
</html>';
        }
    }
}